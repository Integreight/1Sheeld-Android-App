buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.integreight.onesheeld"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 160126
        versionName "1.6.0"
        archivesBaseName = "1Sheeld.v$versionName.$versionCode"
    }

    buildTypes.all{
            ext.enableCrashlytics = isCrashlyticsPropertiesAvailable()
    }

    buildTypes {
        debug{
            versionNameSuffix getWorkingBranchSuffix()
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile project(':localeapi')
    compile project(':pullToRefreshlibrary')
    compile project(':quickReturnHeader')
    compile project(':pagerIndicator')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.facebook.android:facebook-android-sdk:4.5.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.snappydb:snappydb-lib:0.5.0'
    compile 'com.esotericsoftware.kryo:kryo:2.24.0'
    compile 'com.github.hotchemi:android-rate:0.5.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile ('com.google.android.gms:play-services-identity:8.4.0'){
        transitive = true;
    }
    compile('com.google.api-client:google-api-client-android:1.21.0') {
        transitive = true;
        exclude group: 'org.apache.httpcomponents'
    }
    compile('com.google.apis:google-api-services-gmail:v1-rev35-1.21.0') {
        transitive = true;
        exclude group: 'org.apache.httpcomponents'
    }

    compile 'com.parse.bolts:bolts-android:1.3.0'
    compile 'com.parse:parse-android:1.12.0'
    compile 'org.twitter4j:twitter4j-core:4.0.4'
    compile 'org.twitter4j:twitter4j-async:4.0.4'
    compile 'org.twitter4j:twitter4j-stream:4.0.4'
    compile 'cz.msebera.android:httpclient:4.4.1.1'
    compile 'net.sf.supercsv:super-csv:2.4.0'
    compile 'com.github.amlcurran.showcaseview:library:5.4.0'
    compile 'com.github.emanzanoaxa:RippleEffect:52ea2a0ab6'
    compile 'com.drewnoakes:metadata-extractor:2.8.1'
}

def isCrashlyticsPropertiesAvailable() {
    return new File("./oneSheeld/fabric.properties").exists()
}

def getWorkingBranchSuffix() {
    def workingBranchSuffix=""
    try {
        def workingBranch = "git --git-dir=${rootDir}/.git --work-tree=${rootDir} rev-parse --abbrev-ref HEAD".execute().text.trim()
        workingBranchSuffix = (workingBranch!="")? " - branch:" + workingBranch : ""
    }
    catch(all){}
    return workingBranchSuffix
}
